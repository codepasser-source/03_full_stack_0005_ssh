<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" 
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" 
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-2.5.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
  
  <!--作用：执行处理Annotation功能的程序-->
  <context:annotation-config/>
  <!--String annotation IOC 注入目录-->
  <context:component-scan base-package="com.baishui"></context:component-scan> 
 
 <!-- 声明 datasource -->
   <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
      <property name="locations">
          <value>classpath:jdbc.properties</value>
      </property>
   </bean> 
   <bean id="datasource" destroy-method="close" class="org.apache.commons.dbcp.BasicDataSource">
           <property name="driverClassName" value="${jdbc.driverClassName}"/>
            <property name="url" value="${jdbc.url}"/>
             <property name="username" value="${jdbc.username}"/>
               <property name="password" value="${jdbc.password}"/>
   </bean>  
   
  <!-- 声明 Hibernate SessionFactory -->
  <bean id="sessionFactory"   class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="datasource"/> 
     
        <!-- hibernate annotation 配置方法  -->
        <property name="annotatedClasses">
           <list>
            <!-- 实体Bean -->
            <value>com.baishui.model.Users</value>
             <value>com.baishui.model.Role</value>
          </list>
        </property> 
       
        <property name="hibernateProperties"> 
          <props>
              <prop key="hibernate.dialect">org.hibernate.dialect.SQLServerDialect</prop> 
              <prop key="hibernate.show_sql">true</prop> 
              <prop key="hibernate.format_sql">true</prop>
              <prop key="hibernate.hbm2ddl.auto">update</prop>
          </props> 
        </property> 
  </bean>

 <!--声明 HibernateTransactionManager-->
 <bean id="tnManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
    <property name="sessionFactory" ref="sessionFactory" />
 </bean>
 <!-- 声明Transaction 建议 -->
 <tx:advice id="tnAdvice" transaction-manager="tnManager">
    <tx:attributes>
      <!-- 设置指定方法 只允许 读取操作 -->
      <tx:method name="exists" read-only="true"/>  
      <!-- 设置指定方法出现异常自动回滚 -->
      <tx:method name="add*" propagation="REQUIRED"/> <!-- hibernatetemp REQUIRED 含义：如果当前有Transaction对象就用当前的对象，如果没有创建一个新的Transaction-->
    </tx:attributes> 
 </tx:advice> 
 
<!-- Aop Interceptor Class-->  
  <bean id="logInterceptor" class="com.baishui.aop.LogInterceptor"></bean> 
  
<!-- Aop  Config--> 
 <aop:config>
     <!-- 声明数据操作 事务处理AOP 切面 -->
     <aop:pointcut id="tnServiceOperationPointcut" expression="execution(* com.baishui.service.UsersManager.*(..))"/>
     <aop:advisor advice-ref="tnAdvice" pointcut-ref="tnServiceOperationPointcut"/>
    
     <!-- 声明日志事务处理 AOP 切面
    <aop:aspect id="logAspect" ref="logInterceptor" > 
       <aop:pointcut id="servicePointcut" expression="execution(public * com.baishui.service..*.add*(..))"/> 
       <aop:before method="before" pointcut-ref="servicePointcut"/>-->
       <!-- 不引用pointcut ref 
        <aop:before method="before" pointcut="execution(public * com.baishui.service..*.add*(..))"/> 
       --><!--
       <aop:after method="afterReturning" pointcut-ref="servicePointcut"/>
    </aop:aspect> -->
    
 </aop:config> 


<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
    <property name="sessionFactory" ref="sessionFactory"/>
</bean> 


</beans>

